#!/bin/env bash
# git switch
gsw() {
  if [[ -n $1 ]]; then
    git switch "$1"
  else
    git branch | fzf | xargs -I_ git switch _
  fi
}

# git switch remote
gswr () {
  git branch -a | fzf | awk -F "/" '{print $NF}' | xargs -I_ git switch _
}

# git pull
gp() {
  if [[ $# -eq 0 ]]; then
    git pull --all -p --rebase
  else
    git branch | fzf | awk '{ print $2 }' | xargs -I_ git pull origin _ -p --rebase
    # git pull origin "$1" --rebase
  fi
}

# git add 
ga() {
  if [[ $# -eq 0 ]]; then
    git add -A
  else
    git add "$*"
  fi
}

# git push
gpsh() {
  SELETED_BRANCH=$(git branch | fzf)
  COLUM1=$(echo "$SELETED_BRANCH" | awk '{ print $1 }')
  COLUM2=$(echo "$SELETED_BRANCH"| awk '{ print $2 }')

  if [[ -n $COLUM2 ]]; then
    git push origin "$COLUM2"
  else
    git push origin "$COLUM1"
  fi
}

gd () {
  git status --short | awk '{ print $2 }' | fzf --preview 'git diff --color=always {}' --preview-window right:80%
}

# updateAll() {
#   sudo apt update;
#   sudo apt upgrade -y;
#   sudo apt dist-upgrade -y;
#   sudo apt full-upgrade -y;
#   sudo apt autoremove -y;
#   sudo apt autoclean -y;
#   zimup;
# }

function cdd() {
  cd "$(ls -d -- */ | fzf --preview 'ls -a {}')" || echo "Invalid directory"
}

go_to_job() {
  proyect=$(ls ~/Code/job/ | fzf)
  cd ~/Code/job/"$proyect" || exit
}

go_to_dev() {
  proyect=$(ls ~/Code/dev/ | fzf)
  cd ~/Code/dev/"$proyect" || exit
}

# open the proyect work in code and terminal
open_job() {
  poryectName=$(ls ~/Code/job | fzf) 
  cd "$HOME/Code/job/$poryectName" || exit
  code "$HOME/Code/job/$poryectName"
}

# open the proyect work in code and terminal
open_dev() {
  poryectNameDev=$(ls ~/Code/dev | fzf) 
  cd "$HOME/Code/dev/$poryectNameDev" || exit
  code "$HOME/Code/dev/$poryectNameDev"
}

job() {
  open --new -a "Brave Browser" --args "https://app.slack.com/client/TA12BB21H/CA15C9LKU"
  open --new -a "Brave Browser" --args "https://app.clickup.com/"
  open --new -a "Brave Browser" --args "https://mail.google.com/mail/u/2/#all"

  open_job
}

# # clone github repo
# clone_git_repo() {
#   local -r repo_url=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/user/repos?per_page=200" | jq --raw-output ".[].name" | fzf)
#   git clone "git@github.com:rsbmk/$repo_url.git"
#   echo "$repo_url"
# }

# # clone gitlab repo
# clone_gitlab_repo() {
#   local -r repo_url=$(curl -s -H "PRIVATE-TOKEN: $GITLAB_TOKEN" "https://gitlab.com/api/v4/users/robertobocio/starred_projects" | jq --raw-output '.[].path' | fzf)
#   git clone "git@gitlab.com:devlab-ec/$repo_url.git"
#   echo "$repo_url"
# }